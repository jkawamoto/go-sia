// Code generated by go-swagger; DO NOT EDIT.

package renter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jkawamoto/go-sia/models"
)

// GetRenterFilesReader is a Reader for the GetRenterFiles structure.
type GetRenterFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRenterFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRenterFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetRenterFilesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRenterFilesOK creates a GetRenterFilesOK with default headers values
func NewGetRenterFilesOK() *GetRenterFilesOK {
	return &GetRenterFilesOK{}
}

/*GetRenterFilesOK handles this case with default header values.

Successful Response
*/
type GetRenterFilesOK struct {
	Payload *GetRenterFilesOKBody
}

func (o *GetRenterFilesOK) Error() string {
	return fmt.Sprintf("[GET /renter/files][%d] getRenterFilesOK  %+v", 200, o.Payload)
}

func (o *GetRenterFilesOK) GetPayload() *GetRenterFilesOKBody {
	return o.Payload
}

func (o *GetRenterFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRenterFilesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRenterFilesDefault creates a GetRenterFilesDefault with default headers values
func NewGetRenterFilesDefault(code int) *GetRenterFilesDefault {
	return &GetRenterFilesDefault{
		_statusCode: code,
	}
}

/*GetRenterFilesDefault handles this case with default header values.

Error Response
*/
type GetRenterFilesDefault struct {
	_statusCode int

	Payload *models.StandardError
}

// Code gets the status code for the get renter files default response
func (o *GetRenterFilesDefault) Code() int {
	return o._statusCode
}

func (o *GetRenterFilesDefault) Error() string {
	return fmt.Sprintf("[GET /renter/files][%d] GetRenterFiles default  %+v", o._statusCode, o.Payload)
}

func (o *GetRenterFilesDefault) GetPayload() *models.StandardError {
	return o.Payload
}

func (o *GetRenterFilesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetRenterFilesOKBody get renter files o k body
swagger:model GetRenterFilesOKBody
*/
type GetRenterFilesOKBody struct {

	// files
	Files []*models.FileInfo `json:"files"`
}

// Validate validates this get renter files o k body
func (o *GetRenterFilesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFiles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRenterFilesOKBody) validateFiles(formats strfmt.Registry) error {

	if swag.IsZero(o.Files) { // not required
		return nil
	}

	for i := 0; i < len(o.Files); i++ {
		if swag.IsZero(o.Files[i]) { // not required
			continue
		}

		if o.Files[i] != nil {
			if err := o.Files[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRenterFilesOK" + "." + "files" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetRenterFilesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRenterFilesOKBody) UnmarshalBinary(b []byte) error {
	var res GetRenterFilesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
