// Code generated by go-swagger; DO NOT EDIT.

package renter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jkawamoto/go-sia/models"
)

// GetRenterPricesReader is a Reader for the GetRenterPrices structure.
type GetRenterPricesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRenterPricesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRenterPricesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetRenterPricesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRenterPricesOK creates a GetRenterPricesOK with default headers values
func NewGetRenterPricesOK() *GetRenterPricesOK {
	return &GetRenterPricesOK{}
}

/*GetRenterPricesOK handles this case with default header values.

Successful Response
*/
type GetRenterPricesOK struct {
	Payload *GetRenterPricesOKBody
}

func (o *GetRenterPricesOK) Error() string {
	return fmt.Sprintf("[GET /renter/prices][%d] getRenterPricesOK  %+v", 200, o.Payload)
}

func (o *GetRenterPricesOK) GetPayload() *GetRenterPricesOKBody {
	return o.Payload
}

func (o *GetRenterPricesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRenterPricesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRenterPricesDefault creates a GetRenterPricesDefault with default headers values
func NewGetRenterPricesDefault(code int) *GetRenterPricesDefault {
	return &GetRenterPricesDefault{
		_statusCode: code,
	}
}

/*GetRenterPricesDefault handles this case with default header values.

Error Response
*/
type GetRenterPricesDefault struct {
	_statusCode int

	Payload *models.StandardError
}

// Code gets the status code for the get renter prices default response
func (o *GetRenterPricesDefault) Code() int {
	return o._statusCode
}

func (o *GetRenterPricesDefault) Error() string {
	return fmt.Sprintf("[GET /renter/prices][%d] GetRenterPrices default  %+v", o._statusCode, o.Payload)
}

func (o *GetRenterPricesDefault) GetPayload() *models.StandardError {
	return o.Payload
}

func (o *GetRenterPricesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetRenterPricesOKBody get renter prices o k body
swagger:model GetRenterPricesOKBody
*/
type GetRenterPricesOKBody struct {

	// The estimated cost of downloading one terabyte of data from the network.
	Downloadterabyte string `json:"downloadterabyte,omitempty"`

	// The estimated cost of forming a set of contracts on the network. This cost also applies to the estimated cost of renewing the renter's set of contracts.
	Formcontracts string `json:"formcontracts,omitempty"`

	// The estimated cost of storing one terabyte of data on the network for a month, including accounting for redundancy.
	Storageterabytemonth string `json:"storageterabytemonth,omitempty"`

	// The estimated cost of uploading one terabyte of data to the network, including accounting for redundancy.
	Uploadterabyte string `json:"uploadterabyte,omitempty"`
}

// Validate validates this get renter prices o k body
func (o *GetRenterPricesOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRenterPricesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRenterPricesOKBody) UnmarshalBinary(b []byte) error {
	var res GetRenterPricesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
