// Code generated by go-swagger; DO NOT EDIT.

package renter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostRenterDirSiapathParams creates a new PostRenterDirSiapathParams object
// with the default values initialized.
func NewPostRenterDirSiapathParams() *PostRenterDirSiapathParams {
	var ()
	return &PostRenterDirSiapathParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostRenterDirSiapathParamsWithTimeout creates a new PostRenterDirSiapathParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostRenterDirSiapathParamsWithTimeout(timeout time.Duration) *PostRenterDirSiapathParams {
	var ()
	return &PostRenterDirSiapathParams{

		timeout: timeout,
	}
}

// NewPostRenterDirSiapathParamsWithContext creates a new PostRenterDirSiapathParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostRenterDirSiapathParamsWithContext(ctx context.Context) *PostRenterDirSiapathParams {
	var ()
	return &PostRenterDirSiapathParams{

		Context: ctx,
	}
}

// NewPostRenterDirSiapathParamsWithHTTPClient creates a new PostRenterDirSiapathParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostRenterDirSiapathParamsWithHTTPClient(client *http.Client) *PostRenterDirSiapathParams {
	var ()
	return &PostRenterDirSiapathParams{
		HTTPClient: client,
	}
}

/*PostRenterDirSiapathParams contains all the parameters to send to the API endpoint
for the post renter dir siapath operation typically these are written to a http.Request
*/
type PostRenterDirSiapathParams struct {

	/*Action
	 Action can be either create or delete.
	- create will create an empty directory on the sia network
	- delete will remove a directory and its contents from the sia network
	- rename will rename a directory on the sia network

	*/
	Action string
	/*Newsiapath
	  The new siapath of the renamed folder. Only required for the rename action. Location of the file in the renter on the network.

	*/
	Newsiapath *string
	/*Siapath
	  Location of the file in the renter on the network.

	*/
	Siapath string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) WithTimeout(timeout time.Duration) *PostRenterDirSiapathParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) WithContext(ctx context.Context) *PostRenterDirSiapathParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) WithHTTPClient(client *http.Client) *PostRenterDirSiapathParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) WithAction(action string) *PostRenterDirSiapathParams {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) SetAction(action string) {
	o.Action = action
}

// WithNewsiapath adds the newsiapath to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) WithNewsiapath(newsiapath *string) *PostRenterDirSiapathParams {
	o.SetNewsiapath(newsiapath)
	return o
}

// SetNewsiapath adds the newsiapath to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) SetNewsiapath(newsiapath *string) {
	o.Newsiapath = newsiapath
}

// WithSiapath adds the siapath to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) WithSiapath(siapath string) *PostRenterDirSiapathParams {
	o.SetSiapath(siapath)
	return o
}

// SetSiapath adds the siapath to the post renter dir siapath params
func (o *PostRenterDirSiapathParams) SetSiapath(siapath string) {
	o.Siapath = siapath
}

// WriteToRequest writes these params to a swagger request
func (o *PostRenterDirSiapathParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param action
	qrAction := o.Action
	qAction := qrAction
	if qAction != "" {
		if err := r.SetQueryParam("action", qAction); err != nil {
			return err
		}
	}

	if o.Newsiapath != nil {

		// query param newsiapath
		var qrNewsiapath string
		if o.Newsiapath != nil {
			qrNewsiapath = *o.Newsiapath
		}
		qNewsiapath := qrNewsiapath
		if qNewsiapath != "" {
			if err := r.SetQueryParam("newsiapath", qNewsiapath); err != nil {
				return err
			}
		}

	}

	// path param siapath
	if err := r.SetPathParam("siapath", o.Siapath); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
