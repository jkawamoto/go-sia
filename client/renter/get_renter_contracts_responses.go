// Code generated by go-swagger; DO NOT EDIT.

package renter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/jkawamoto/go-sia/models"
)

// GetRenterContractsReader is a Reader for the GetRenterContracts structure.
type GetRenterContractsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRenterContractsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRenterContractsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetRenterContractsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRenterContractsOK creates a GetRenterContractsOK with default headers values
func NewGetRenterContractsOK() *GetRenterContractsOK {
	return &GetRenterContractsOK{}
}

/* GetRenterContractsOK describes a response with status code 200, with default header values.

Successful Response
*/
type GetRenterContractsOK struct {
	Payload *GetRenterContractsOKBody
}

func (o *GetRenterContractsOK) Error() string {
	return fmt.Sprintf("[GET /renter/contracts][%d] getRenterContractsOK  %+v", 200, o.Payload)
}
func (o *GetRenterContractsOK) GetPayload() *GetRenterContractsOKBody {
	return o.Payload
}

func (o *GetRenterContractsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRenterContractsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRenterContractsDefault creates a GetRenterContractsDefault with default headers values
func NewGetRenterContractsDefault(code int) *GetRenterContractsDefault {
	return &GetRenterContractsDefault{
		_statusCode: code,
	}
}

/* GetRenterContractsDefault describes a response with status code -1, with default header values.

Error Response
*/
type GetRenterContractsDefault struct {
	_statusCode int

	Payload *models.StandardError
}

// Code gets the status code for the get renter contracts default response
func (o *GetRenterContractsDefault) Code() int {
	return o._statusCode
}

func (o *GetRenterContractsDefault) Error() string {
	return fmt.Sprintf("[GET /renter/contracts][%d] GetRenterContracts default  %+v", o._statusCode, o.Payload)
}
func (o *GetRenterContractsDefault) GetPayload() *models.StandardError {
	return o.Payload
}

func (o *GetRenterContractsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetRenterContractsOKBody get renter contracts o k body
swagger:model GetRenterContractsOKBody
*/
type GetRenterContractsOKBody struct {

	// contracts
	Contracts []*GetRenterContractsOKBodyContractsItems0 `json:"contracts"`
}

// Validate validates this get renter contracts o k body
func (o *GetRenterContractsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateContracts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRenterContractsOKBody) validateContracts(formats strfmt.Registry) error {
	if swag.IsZero(o.Contracts) { // not required
		return nil
	}

	for i := 0; i < len(o.Contracts); i++ {
		if swag.IsZero(o.Contracts[i]) { // not required
			continue
		}

		if o.Contracts[i] != nil {
			if err := o.Contracts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRenterContractsOK" + "." + "contracts" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get renter contracts o k body based on the context it is used
func (o *GetRenterContractsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateContracts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRenterContractsOKBody) contextValidateContracts(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Contracts); i++ {

		if o.Contracts[i] != nil {
			if err := o.Contracts[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRenterContractsOK" + "." + "contracts" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetRenterContractsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRenterContractsOKBody) UnmarshalBinary(b []byte) error {
	var res GetRenterContractsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetRenterContractsOKBodyContractsItems0 get renter contracts o k body contracts items0
swagger:model GetRenterContractsOKBodyContractsItems0
*/
type GetRenterContractsOKBodyContractsItems0 struct {

	// Amount of contract funds that have been spent on downloads. In hastings.
	// Example: 1234
	Downloadspending string `json:"downloadspending,omitempty"`

	// Block height that the file contract ends on.
	// Example: 50000
	Endheight int64 `json:"endheight,omitempty"`

	// Fees paid in order to form the file contract.
	// Example: 1234
	Fees string `json:"fees,omitempty"`

	// Signals if contract is good for a renewal
	// Example: false
	Goodforrenew bool `json:"goodforrenew,omitempty"`

	// Signals if contract is good for uploading data
	// Example: true
	Goodforupload bool `json:"goodforupload,omitempty"`

	// hostpublickey
	Hostpublickey *GetRenterContractsOKBodyContractsItems0Hostpublickey `json:"hostpublickey,omitempty"`

	// ID of the file contract
	// Example: 1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef
	ID string `json:"id,omitempty"`

	// A signed transaction containing the most recent contract revision.
	Lasttransaction interface{} `json:"lasttransaction,omitempty"`

	// Address of the host the file contract was formed with.
	// Example: 12.34.56.78:9
	Netaddress string `json:"netaddress,omitempty"`

	// Remaining funds left for the renter to spend on uploads & downloads.
	// Example: 1234
	Renterfunds string `json:"renterfunds,omitempty"`

	// Size of the file contract, which is typically equal to the number of bytes that have been uploaded to the host.
	// Example: 8192
	Size int64 `json:"size,omitempty"`

	// Block height that the file contract began on.
	// Example: 50000
	Startheight int64 `json:"startheight,omitempty"`

	// Amount of contract funds that have been spent on storage.
	// Example: 1234
	Storagespending string `json:"storagespending,omitempty"`

	// Total cost to the wallet of forming the file contract. This includes both the fees and the funds allocated in the contract.
	// Example: 1234
	Totalcost string `json:"totalcost,omitempty"`

	// Amount of contract funds that have been spent on uploads.
	// Example: 1234
	Uploadspending string `json:"uploadspending,omitempty"`
}

// Validate validates this get renter contracts o k body contracts items0
func (o *GetRenterContractsOKBodyContractsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHostpublickey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRenterContractsOKBodyContractsItems0) validateHostpublickey(formats strfmt.Registry) error {
	if swag.IsZero(o.Hostpublickey) { // not required
		return nil
	}

	if o.Hostpublickey != nil {
		if err := o.Hostpublickey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("hostpublickey")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get renter contracts o k body contracts items0 based on the context it is used
func (o *GetRenterContractsOKBodyContractsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHostpublickey(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRenterContractsOKBodyContractsItems0) contextValidateHostpublickey(ctx context.Context, formats strfmt.Registry) error {

	if o.Hostpublickey != nil {
		if err := o.Hostpublickey.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("hostpublickey")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetRenterContractsOKBodyContractsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRenterContractsOKBodyContractsItems0) UnmarshalBinary(b []byte) error {
	var res GetRenterContractsOKBodyContractsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetRenterContractsOKBodyContractsItems0Hostpublickey Public key of the host the contract was formed with.
swagger:model GetRenterContractsOKBodyContractsItems0Hostpublickey
*/
type GetRenterContractsOKBodyContractsItems0Hostpublickey struct {

	// algorithm
	// Example: ed25519
	Algorithm string `json:"algorithm,omitempty"`

	// key
	// Example: RW50cm9weSBpc24ndCB3aGF0IGl0IHVzZWQgdG8gYmU
	Key string `json:"key,omitempty"`
}

// Validate validates this get renter contracts o k body contracts items0 hostpublickey
func (o *GetRenterContractsOKBodyContractsItems0Hostpublickey) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get renter contracts o k body contracts items0 hostpublickey based on context it is used
func (o *GetRenterContractsOKBodyContractsItems0Hostpublickey) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRenterContractsOKBodyContractsItems0Hostpublickey) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRenterContractsOKBodyContractsItems0Hostpublickey) UnmarshalBinary(b []byte) error {
	var res GetRenterContractsOKBodyContractsItems0Hostpublickey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
