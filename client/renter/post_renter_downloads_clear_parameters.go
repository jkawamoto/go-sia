// Code generated by go-swagger; DO NOT EDIT.

package renter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostRenterDownloadsClearParams creates a new PostRenterDownloadsClearParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostRenterDownloadsClearParams() *PostRenterDownloadsClearParams {
	return &PostRenterDownloadsClearParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostRenterDownloadsClearParamsWithTimeout creates a new PostRenterDownloadsClearParams object
// with the ability to set a timeout on a request.
func NewPostRenterDownloadsClearParamsWithTimeout(timeout time.Duration) *PostRenterDownloadsClearParams {
	return &PostRenterDownloadsClearParams{
		timeout: timeout,
	}
}

// NewPostRenterDownloadsClearParamsWithContext creates a new PostRenterDownloadsClearParams object
// with the ability to set a context for a request.
func NewPostRenterDownloadsClearParamsWithContext(ctx context.Context) *PostRenterDownloadsClearParams {
	return &PostRenterDownloadsClearParams{
		Context: ctx,
	}
}

// NewPostRenterDownloadsClearParamsWithHTTPClient creates a new PostRenterDownloadsClearParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostRenterDownloadsClearParamsWithHTTPClient(client *http.Client) *PostRenterDownloadsClearParams {
	return &PostRenterDownloadsClearParams{
		HTTPClient: client,
	}
}

/* PostRenterDownloadsClearParams contains all the parameters to send to the API endpoint
   for the post renter downloads clear operation.

   Typically these are written to a http.Request.
*/
type PostRenterDownloadsClearParams struct {

	/* After.

	   unix timestamp found in the download history

	   Format: int64
	*/
	After *int64

	/* Before.

	   unix timestamp found in the download history

	   Format: int64
	*/
	Before *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post renter downloads clear params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostRenterDownloadsClearParams) WithDefaults() *PostRenterDownloadsClearParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post renter downloads clear params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostRenterDownloadsClearParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) WithTimeout(timeout time.Duration) *PostRenterDownloadsClearParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) WithContext(ctx context.Context) *PostRenterDownloadsClearParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) WithHTTPClient(client *http.Client) *PostRenterDownloadsClearParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAfter adds the after to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) WithAfter(after *int64) *PostRenterDownloadsClearParams {
	o.SetAfter(after)
	return o
}

// SetAfter adds the after to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) SetAfter(after *int64) {
	o.After = after
}

// WithBefore adds the before to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) WithBefore(before *int64) *PostRenterDownloadsClearParams {
	o.SetBefore(before)
	return o
}

// SetBefore adds the before to the post renter downloads clear params
func (o *PostRenterDownloadsClearParams) SetBefore(before *int64) {
	o.Before = before
}

// WriteToRequest writes these params to a swagger request
func (o *PostRenterDownloadsClearParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.After != nil {

		// query param after
		var qrAfter int64

		if o.After != nil {
			qrAfter = *o.After
		}
		qAfter := swag.FormatInt64(qrAfter)
		if qAfter != "" {

			if err := r.SetQueryParam("after", qAfter); err != nil {
				return err
			}
		}
	}

	if o.Before != nil {

		// query param before
		var qrBefore int64

		if o.Before != nil {
			qrBefore = *o.Before
		}
		qBefore := swag.FormatInt64(qrBefore)
		if qBefore != "" {

			if err := r.SetQueryParam("before", qBefore); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
