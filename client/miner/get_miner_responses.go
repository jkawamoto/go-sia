// Code generated by go-swagger; DO NOT EDIT.

package miner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jkawamoto/go-sia/models"
)

// GetMinerReader is a Reader for the GetMiner structure.
type GetMinerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMinerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMinerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetMinerDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMinerOK creates a GetMinerOK with default headers values
func NewGetMinerOK() *GetMinerOK {
	return &GetMinerOK{}
}

/*GetMinerOK handles this case with default header values.

Successful Response
*/
type GetMinerOK struct {
	Payload *GetMinerOKBody
}

func (o *GetMinerOK) Error() string {
	return fmt.Sprintf("[GET /miner][%d] getMinerOK  %+v", 200, o.Payload)
}

func (o *GetMinerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMinerOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMinerDefault creates a GetMinerDefault with default headers values
func NewGetMinerDefault(code int) *GetMinerDefault {
	return &GetMinerDefault{
		_statusCode: code,
	}
}

/*GetMinerDefault handles this case with default header values.

Error Response
*/
type GetMinerDefault struct {
	_statusCode int

	Payload *models.StandardError
}

// Code gets the status code for the get miner default response
func (o *GetMinerDefault) Code() int {
	return o._statusCode
}

func (o *GetMinerDefault) Error() string {
	return fmt.Sprintf("[GET /miner][%d] GetMiner default  %+v", o._statusCode, o.Payload)
}

func (o *GetMinerDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetMinerOKBody get miner o k body
swagger:model GetMinerOKBody
*/
type GetMinerOKBody struct {

	// Number of mined blocks. This value is remembered after restarting.
	Blocksmined int64 `json:"blocksmined,omitempty"`

	// How fast the cpu is hashing, in hashes per second.
	Cpuhashrate int64 `json:"cpuhashrate,omitempty"`

	// true if the cpu miner is active.
	Cpumining bool `json:"cpumining,omitempty"`

	// Number of mined blocks that are stale, indicating that they are not
	// included in the current longest chain, likely because some other block at
	// the same height had its chain extended first.
	//
	Staleblocksmined int64 `json:"staleblocksmined,omitempty"`
}

// Validate validates this get miner o k body
func (o *GetMinerOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMinerOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMinerOKBody) UnmarshalBinary(b []byte) error {
	var res GetMinerOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
