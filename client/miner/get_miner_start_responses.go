// Code generated by go-swagger; DO NOT EDIT.

package miner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jkawamoto/go-sia/models"
)

// GetMinerStartReader is a Reader for the GetMinerStart structure.
type GetMinerStartReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMinerStartReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMinerStartOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetMinerStartDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMinerStartOK creates a GetMinerStartOK with default headers values
func NewGetMinerStartOK() *GetMinerStartOK {
	return &GetMinerStartOK{}
}

/*GetMinerStartOK handles this case with default header values.

Successful Response
*/
type GetMinerStartOK struct {
}

func (o *GetMinerStartOK) Error() string {
	return fmt.Sprintf("[GET /miner/start][%d] getMinerStartOK ", 200)
}

func (o *GetMinerStartOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMinerStartDefault creates a GetMinerStartDefault with default headers values
func NewGetMinerStartDefault(code int) *GetMinerStartDefault {
	return &GetMinerStartDefault{
		_statusCode: code,
	}
}

/*GetMinerStartDefault handles this case with default header values.

Error Response
*/
type GetMinerStartDefault struct {
	_statusCode int

	Payload *models.StandardError
}

// Code gets the status code for the get miner start default response
func (o *GetMinerStartDefault) Code() int {
	return o._statusCode
}

func (o *GetMinerStartDefault) Error() string {
	return fmt.Sprintf("[GET /miner/start][%d] GetMinerStart default  %+v", o._statusCode, o.Payload)
}

func (o *GetMinerStartDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
