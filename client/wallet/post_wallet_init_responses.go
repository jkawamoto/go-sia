// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/jkawamoto/go-sia/models"
)

// PostWalletInitReader is a Reader for the PostWalletInit structure.
type PostWalletInitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostWalletInitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostWalletInitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostWalletInitDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostWalletInitOK creates a PostWalletInitOK with default headers values
func NewPostWalletInitOK() *PostWalletInitOK {
	return &PostWalletInitOK{}
}

/* PostWalletInitOK describes a response with status code 200, with default header values.

Successful Response
*/
type PostWalletInitOK struct {
	Payload *PostWalletInitOKBody
}

func (o *PostWalletInitOK) Error() string {
	return fmt.Sprintf("[POST /wallet/init][%d] postWalletInitOK  %+v", 200, o.Payload)
}
func (o *PostWalletInitOK) GetPayload() *PostWalletInitOKBody {
	return o.Payload
}

func (o *PostWalletInitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostWalletInitOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWalletInitDefault creates a PostWalletInitDefault with default headers values
func NewPostWalletInitDefault(code int) *PostWalletInitDefault {
	return &PostWalletInitDefault{
		_statusCode: code,
	}
}

/* PostWalletInitDefault describes a response with status code -1, with default header values.

Error Response
*/
type PostWalletInitDefault struct {
	_statusCode int

	Payload *models.StandardError
}

// Code gets the status code for the post wallet init default response
func (o *PostWalletInitDefault) Code() int {
	return o._statusCode
}

func (o *PostWalletInitDefault) Error() string {
	return fmt.Sprintf("[POST /wallet/init][%d] PostWalletInit default  %+v", o._statusCode, o.Payload)
}
func (o *PostWalletInitDefault) GetPayload() *models.StandardError {
	return o.Payload
}

func (o *PostWalletInitDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostWalletInitOKBody post wallet init o k body
swagger:model PostWalletInitOKBody
*/
type PostWalletInitOKBody struct {

	// Wallet seed used to generate addresses that the wallet is able to spend.
	// Example: hello world hello world hello world hello world hello world hello world  hello world hello world hello world hello world hello world hello world  hello world hello world hello
	Primaryseed string `json:"primaryseed,omitempty"`
}

// Validate validates this post wallet init o k body
func (o *PostWalletInitOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post wallet init o k body based on context it is used
func (o *PostWalletInitOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostWalletInitOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostWalletInitOKBody) UnmarshalBinary(b []byte) error {
	var res PostWalletInitOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
