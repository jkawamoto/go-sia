// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetWalletBackupParams creates a new GetWalletBackupParams object
// with the default values initialized.
func NewGetWalletBackupParams() *GetWalletBackupParams {
	var ()
	return &GetWalletBackupParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWalletBackupParamsWithTimeout creates a new GetWalletBackupParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWalletBackupParamsWithTimeout(timeout time.Duration) *GetWalletBackupParams {
	var ()
	return &GetWalletBackupParams{

		timeout: timeout,
	}
}

// NewGetWalletBackupParamsWithContext creates a new GetWalletBackupParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWalletBackupParamsWithContext(ctx context.Context) *GetWalletBackupParams {
	var ()
	return &GetWalletBackupParams{

		Context: ctx,
	}
}

// NewGetWalletBackupParamsWithHTTPClient creates a new GetWalletBackupParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWalletBackupParamsWithHTTPClient(client *http.Client) *GetWalletBackupParams {
	var ()
	return &GetWalletBackupParams{
		HTTPClient: client,
	}
}

/*GetWalletBackupParams contains all the parameters to send to the API endpoint
for the get wallet backup operation typically these are written to a http.Request
*/
type GetWalletBackupParams struct {

	/*Destination
	  path to the location on disk where the backup file will be saved.

	*/
	Destination *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get wallet backup params
func (o *GetWalletBackupParams) WithTimeout(timeout time.Duration) *GetWalletBackupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get wallet backup params
func (o *GetWalletBackupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get wallet backup params
func (o *GetWalletBackupParams) WithContext(ctx context.Context) *GetWalletBackupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get wallet backup params
func (o *GetWalletBackupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get wallet backup params
func (o *GetWalletBackupParams) WithHTTPClient(client *http.Client) *GetWalletBackupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get wallet backup params
func (o *GetWalletBackupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDestination adds the destination to the get wallet backup params
func (o *GetWalletBackupParams) WithDestination(destination *string) *GetWalletBackupParams {
	o.SetDestination(destination)
	return o
}

// SetDestination adds the destination to the get wallet backup params
func (o *GetWalletBackupParams) SetDestination(destination *string) {
	o.Destination = destination
}

// WriteToRequest writes these params to a swagger request
func (o *GetWalletBackupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Destination != nil {

		// query param destination
		var qrDestination string
		if o.Destination != nil {
			qrDestination = *o.Destination
		}
		qDestination := qrDestination
		if qDestination != "" {
			if err := r.SetQueryParam("destination", qDestination); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
