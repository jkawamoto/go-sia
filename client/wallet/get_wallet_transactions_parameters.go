// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetWalletTransactionsParams creates a new GetWalletTransactionsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetWalletTransactionsParams() *GetWalletTransactionsParams {
	return &GetWalletTransactionsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetWalletTransactionsParamsWithTimeout creates a new GetWalletTransactionsParams object
// with the ability to set a timeout on a request.
func NewGetWalletTransactionsParamsWithTimeout(timeout time.Duration) *GetWalletTransactionsParams {
	return &GetWalletTransactionsParams{
		timeout: timeout,
	}
}

// NewGetWalletTransactionsParamsWithContext creates a new GetWalletTransactionsParams object
// with the ability to set a context for a request.
func NewGetWalletTransactionsParamsWithContext(ctx context.Context) *GetWalletTransactionsParams {
	return &GetWalletTransactionsParams{
		Context: ctx,
	}
}

// NewGetWalletTransactionsParamsWithHTTPClient creates a new GetWalletTransactionsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetWalletTransactionsParamsWithHTTPClient(client *http.Client) *GetWalletTransactionsParams {
	return &GetWalletTransactionsParams{
		HTTPClient: client,
	}
}

/* GetWalletTransactionsParams contains all the parameters to send to the API endpoint
   for the get wallet transactions operation.

   Typically these are written to a http.Request.
*/
type GetWalletTransactionsParams struct {

	/* Endheight.

	   Height of of the block where the transaction history should end. If 'endheight' is greater than the current height, all transactions up to and including the most recent block will be provided.
	*/
	Endheight *string

	/* Startheight.

	   Height of the block where transaction history should begin.
	*/
	Startheight *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get wallet transactions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetWalletTransactionsParams) WithDefaults() *GetWalletTransactionsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get wallet transactions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetWalletTransactionsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get wallet transactions params
func (o *GetWalletTransactionsParams) WithTimeout(timeout time.Duration) *GetWalletTransactionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get wallet transactions params
func (o *GetWalletTransactionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get wallet transactions params
func (o *GetWalletTransactionsParams) WithContext(ctx context.Context) *GetWalletTransactionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get wallet transactions params
func (o *GetWalletTransactionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get wallet transactions params
func (o *GetWalletTransactionsParams) WithHTTPClient(client *http.Client) *GetWalletTransactionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get wallet transactions params
func (o *GetWalletTransactionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndheight adds the endheight to the get wallet transactions params
func (o *GetWalletTransactionsParams) WithEndheight(endheight *string) *GetWalletTransactionsParams {
	o.SetEndheight(endheight)
	return o
}

// SetEndheight adds the endheight to the get wallet transactions params
func (o *GetWalletTransactionsParams) SetEndheight(endheight *string) {
	o.Endheight = endheight
}

// WithStartheight adds the startheight to the get wallet transactions params
func (o *GetWalletTransactionsParams) WithStartheight(startheight *string) *GetWalletTransactionsParams {
	o.SetStartheight(startheight)
	return o
}

// SetStartheight adds the startheight to the get wallet transactions params
func (o *GetWalletTransactionsParams) SetStartheight(startheight *string) {
	o.Startheight = startheight
}

// WriteToRequest writes these params to a swagger request
func (o *GetWalletTransactionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Endheight != nil {

		// query param endheight
		var qrEndheight string

		if o.Endheight != nil {
			qrEndheight = *o.Endheight
		}
		qEndheight := qrEndheight
		if qEndheight != "" {

			if err := r.SetQueryParam("endheight", qEndheight); err != nil {
				return err
			}
		}
	}

	if o.Startheight != nil {

		// query param startheight
		var qrStartheight string

		if o.Startheight != nil {
			qrStartheight = *o.Startheight
		}
		qStartheight := qrStartheight
		if qStartheight != "" {

			if err := r.SetQueryParam("startheight", qStartheight); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
