// Code generated by go-swagger; DO NOT EDIT.

package host

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jkawamoto/go-sia/models"
)

// PostHostReader is a Reader for the PostHost structure.
type PostHostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostHostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPostHostNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostHostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostHostNoContent creates a PostHostNoContent with default headers values
func NewPostHostNoContent() *PostHostNoContent {
	return &PostHostNoContent{}
}

/*PostHostNoContent handles this case with default header values.

Successful Response
*/
type PostHostNoContent struct {
}

func (o *PostHostNoContent) Error() string {
	return fmt.Sprintf("[POST /host][%d] postHostNoContent ", 204)
}

func (o *PostHostNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostHostDefault creates a PostHostDefault with default headers values
func NewPostHostDefault(code int) *PostHostDefault {
	return &PostHostDefault{
		_statusCode: code,
	}
}

/*PostHostDefault handles this case with default header values.

Error Response
*/
type PostHostDefault struct {
	_statusCode int

	Payload *models.StandardError
}

// Code gets the status code for the post host default response
func (o *PostHostDefault) Code() int {
	return o._statusCode
}

func (o *PostHostDefault) Error() string {
	return fmt.Sprintf("[POST /host][%d] PostHost default  %+v", o._statusCode, o.Payload)
}

func (o *PostHostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
