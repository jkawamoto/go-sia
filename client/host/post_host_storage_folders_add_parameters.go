// Code generated by go-swagger; DO NOT EDIT.

package host

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostHostStorageFoldersAddParams creates a new PostHostStorageFoldersAddParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostHostStorageFoldersAddParams() *PostHostStorageFoldersAddParams {
	return &PostHostStorageFoldersAddParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostHostStorageFoldersAddParamsWithTimeout creates a new PostHostStorageFoldersAddParams object
// with the ability to set a timeout on a request.
func NewPostHostStorageFoldersAddParamsWithTimeout(timeout time.Duration) *PostHostStorageFoldersAddParams {
	return &PostHostStorageFoldersAddParams{
		timeout: timeout,
	}
}

// NewPostHostStorageFoldersAddParamsWithContext creates a new PostHostStorageFoldersAddParams object
// with the ability to set a context for a request.
func NewPostHostStorageFoldersAddParamsWithContext(ctx context.Context) *PostHostStorageFoldersAddParams {
	return &PostHostStorageFoldersAddParams{
		Context: ctx,
	}
}

// NewPostHostStorageFoldersAddParamsWithHTTPClient creates a new PostHostStorageFoldersAddParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostHostStorageFoldersAddParamsWithHTTPClient(client *http.Client) *PostHostStorageFoldersAddParams {
	return &PostHostStorageFoldersAddParams{
		HTTPClient: client,
	}
}

/* PostHostStorageFoldersAddParams contains all the parameters to send to the API endpoint
   for the post host storage folders add operation.

   Typically these are written to a http.Request.
*/
type PostHostStorageFoldersAddParams struct {

	/* Path.

	   Local path on disk to the storage folder to add.
	*/
	Path string

	/* Size.

	   Initial capacity of the storage folder. This value isn't validated so it is possible to set the capacity of the storage folder greater than the capacity of the disk. Do not do this. in: query

	*/
	Size int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post host storage folders add params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostHostStorageFoldersAddParams) WithDefaults() *PostHostStorageFoldersAddParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post host storage folders add params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostHostStorageFoldersAddParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) WithTimeout(timeout time.Duration) *PostHostStorageFoldersAddParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) WithContext(ctx context.Context) *PostHostStorageFoldersAddParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) WithHTTPClient(client *http.Client) *PostHostStorageFoldersAddParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPath adds the path to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) WithPath(path string) *PostHostStorageFoldersAddParams {
	o.SetPath(path)
	return o
}

// SetPath adds the path to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) SetPath(path string) {
	o.Path = path
}

// WithSize adds the size to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) WithSize(size int64) *PostHostStorageFoldersAddParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the post host storage folders add params
func (o *PostHostStorageFoldersAddParams) SetSize(size int64) {
	o.Size = size
}

// WriteToRequest writes these params to a swagger request
func (o *PostHostStorageFoldersAddParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param path
	qrPath := o.Path
	qPath := qrPath
	if qPath != "" {

		if err := r.SetQueryParam("path", qPath); err != nil {
			return err
		}
	}

	// query param size
	qrSize := o.Size
	qSize := swag.FormatInt64(qrSize)
	if qSize != "" {

		if err := r.SetQueryParam("size", qSize); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
