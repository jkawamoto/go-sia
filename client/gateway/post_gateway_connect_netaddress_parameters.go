// Code generated by go-swagger; DO NOT EDIT.

package gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostGatewayConnectNetaddressParams creates a new PostGatewayConnectNetaddressParams object
// with the default values initialized.
func NewPostGatewayConnectNetaddressParams() *PostGatewayConnectNetaddressParams {
	var ()
	return &PostGatewayConnectNetaddressParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostGatewayConnectNetaddressParamsWithTimeout creates a new PostGatewayConnectNetaddressParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostGatewayConnectNetaddressParamsWithTimeout(timeout time.Duration) *PostGatewayConnectNetaddressParams {
	var ()
	return &PostGatewayConnectNetaddressParams{

		timeout: timeout,
	}
}

// NewPostGatewayConnectNetaddressParamsWithContext creates a new PostGatewayConnectNetaddressParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostGatewayConnectNetaddressParamsWithContext(ctx context.Context) *PostGatewayConnectNetaddressParams {
	var ()
	return &PostGatewayConnectNetaddressParams{

		Context: ctx,
	}
}

// NewPostGatewayConnectNetaddressParamsWithHTTPClient creates a new PostGatewayConnectNetaddressParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostGatewayConnectNetaddressParamsWithHTTPClient(client *http.Client) *PostGatewayConnectNetaddressParams {
	var ()
	return &PostGatewayConnectNetaddressParams{
		HTTPClient: client,
	}
}

/*PostGatewayConnectNetaddressParams contains all the parameters to send to the API endpoint
for the post gateway connect netaddress operation typically these are written to a http.Request
*/
type PostGatewayConnectNetaddressParams struct {

	/*Netaddress
	  address of the peer to connect to. It should be a
	reachable ip address and port number, of the form IP:port. IPV6 addresses
	must be enclosed in square brackets.


	*/
	Netaddress string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post gateway connect netaddress params
func (o *PostGatewayConnectNetaddressParams) WithTimeout(timeout time.Duration) *PostGatewayConnectNetaddressParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post gateway connect netaddress params
func (o *PostGatewayConnectNetaddressParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post gateway connect netaddress params
func (o *PostGatewayConnectNetaddressParams) WithContext(ctx context.Context) *PostGatewayConnectNetaddressParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post gateway connect netaddress params
func (o *PostGatewayConnectNetaddressParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post gateway connect netaddress params
func (o *PostGatewayConnectNetaddressParams) WithHTTPClient(client *http.Client) *PostGatewayConnectNetaddressParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post gateway connect netaddress params
func (o *PostGatewayConnectNetaddressParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetaddress adds the netaddress to the post gateway connect netaddress params
func (o *PostGatewayConnectNetaddressParams) WithNetaddress(netaddress string) *PostGatewayConnectNetaddressParams {
	o.SetNetaddress(netaddress)
	return o
}

// SetNetaddress adds the netaddress to the post gateway connect netaddress params
func (o *PostGatewayConnectNetaddressParams) SetNetaddress(netaddress string) {
	o.Netaddress = netaddress
}

// WriteToRequest writes these params to a swagger request
func (o *PostGatewayConnectNetaddressParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param netaddress
	if err := r.SetPathParam("netaddress", o.Netaddress); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
