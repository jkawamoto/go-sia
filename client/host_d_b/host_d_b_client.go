// Code generated by go-swagger; DO NOT EDIT.

package host_d_b

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new host d b API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for host d b API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetHostdbActive lists all of the active hosts known to the renter, sorted by preference.

*/
func (a *Client) GetHostdbActive(params *GetHostdbActiveParams, authInfo runtime.ClientAuthInfoWriter) (*GetHostdbActiveOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetHostdbActiveParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetHostdbActive",
		Method:             "GET",
		PathPattern:        "/hostdb/active",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetHostdbActiveReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetHostdbActiveOK), nil

}

/*
GetHostdbAll lists all of the hosts known to the renter. Hosts are not guaranteed to be in any particular order, and the order may change in subsequent calls.

*/
func (a *Client) GetHostdbAll(params *GetHostdbAllParams, authInfo runtime.ClientAuthInfoWriter) (*GetHostdbAllOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetHostdbAllParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetHostdbAll",
		Method:             "GET",
		PathPattern:        "/hostdb/all",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetHostdbAllReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetHostdbAllOK), nil

}

/*
GetHostdbHostsPubkey fetches detailed information about a particular host, including metrics regarding the score of the host within the database. It should be noted that each renter uses different metrics for selecting hosts, and that a good score on in one hostdb does not mean that the host will be successful on the network overall.

*/
func (a *Client) GetHostdbHostsPubkey(params *GetHostdbHostsPubkeyParams, authInfo runtime.ClientAuthInfoWriter) (*GetHostdbHostsPubkeyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetHostdbHostsPubkeyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetHostdbHostsPubkey",
		Method:             "GET",
		PathPattern:        "/hostdb/hosts/{pubkey}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetHostdbHostsPubkeyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetHostdbHostsPubkeyOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
