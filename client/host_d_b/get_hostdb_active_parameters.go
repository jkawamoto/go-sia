// Code generated by go-swagger; DO NOT EDIT.

package host_d_b

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetHostdbActiveParams creates a new GetHostdbActiveParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetHostdbActiveParams() *GetHostdbActiveParams {
	return &GetHostdbActiveParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetHostdbActiveParamsWithTimeout creates a new GetHostdbActiveParams object
// with the ability to set a timeout on a request.
func NewGetHostdbActiveParamsWithTimeout(timeout time.Duration) *GetHostdbActiveParams {
	return &GetHostdbActiveParams{
		timeout: timeout,
	}
}

// NewGetHostdbActiveParamsWithContext creates a new GetHostdbActiveParams object
// with the ability to set a context for a request.
func NewGetHostdbActiveParamsWithContext(ctx context.Context) *GetHostdbActiveParams {
	return &GetHostdbActiveParams{
		Context: ctx,
	}
}

// NewGetHostdbActiveParamsWithHTTPClient creates a new GetHostdbActiveParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetHostdbActiveParamsWithHTTPClient(client *http.Client) *GetHostdbActiveParams {
	return &GetHostdbActiveParams{
		HTTPClient: client,
	}
}

/* GetHostdbActiveParams contains all the parameters to send to the API endpoint
   for the get hostdb active operation.

   Typically these are written to a http.Request.
*/
type GetHostdbActiveParams struct {

	/* Numhosts.

	   Number of hosts to return. The actual number of hosts returned may be less if there are insufficient active hosts. Optional, the default is all active hosts.
	*/
	Numhosts *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get hostdb active params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetHostdbActiveParams) WithDefaults() *GetHostdbActiveParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get hostdb active params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetHostdbActiveParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get hostdb active params
func (o *GetHostdbActiveParams) WithTimeout(timeout time.Duration) *GetHostdbActiveParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get hostdb active params
func (o *GetHostdbActiveParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get hostdb active params
func (o *GetHostdbActiveParams) WithContext(ctx context.Context) *GetHostdbActiveParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get hostdb active params
func (o *GetHostdbActiveParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get hostdb active params
func (o *GetHostdbActiveParams) WithHTTPClient(client *http.Client) *GetHostdbActiveParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get hostdb active params
func (o *GetHostdbActiveParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNumhosts adds the numhosts to the get hostdb active params
func (o *GetHostdbActiveParams) WithNumhosts(numhosts *int64) *GetHostdbActiveParams {
	o.SetNumhosts(numhosts)
	return o
}

// SetNumhosts adds the numhosts to the get hostdb active params
func (o *GetHostdbActiveParams) SetNumhosts(numhosts *int64) {
	o.Numhosts = numhosts
}

// WriteToRequest writes these params to a swagger request
func (o *GetHostdbActiveParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Numhosts != nil {

		// query param numhosts
		var qrNumhosts int64

		if o.Numhosts != nil {
			qrNumhosts = *o.Numhosts
		}
		qNumhosts := swag.FormatInt64(qrNumhosts)
		if qNumhosts != "" {

			if err := r.SetQueryParam("numhosts", qNumhosts); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
